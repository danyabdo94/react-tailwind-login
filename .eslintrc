{
    "rules": {
        "import/export": "error",
        "import/no-unresolved": "error",
        "import/order": [
            "error",
            {
                "groups": [
                    [
                        "builtin",
                        "external"
                    ],
                    [
                        "parent",
                        "sibling",
                        "index",
                        "internal"
                    ]
                ],
                "newlines-between": "always"
            }
        ],
        "no-console": "warn",
        "no-control-regex": "off",
        "no-nested-ternary": "error",
        "no-unneeded-ternary": "error",
        "no-useless-escape": "off",
        "prefer-const": "error",
        "react-hooks/exhaustive-deps": "warn",
        "react-hooks/rules-of-hooks": "error",
        "no-param-reassign": "error"
    },
    "globals": {
        "_": true,
        "define": true
    },
    "env": {
        "es6": true,
        "browser": true,
        "node": true,
        "jest": true,
        "jquery": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:jest/recommended"
    ],
    "parser": "babel-eslint",
    "parserOptions": {
        "sourceType": "module",
        "ecmaVersion": 2017,
        "ecmaFeatures": {
            "classes": true,
            "jsx": true
        }
    },
    "plugins": [
        "react",
        "react-hooks",
        "import"
    ],
    "overrides": [
        {
            "files": [
                "**/*.ts?(x)"
            ],
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                "ecmaVersion": 2018,
                "sourceType": "module",
                "ecmaFeatures": {
                    "jsx": true
                },
                // typescript-eslint specific options
                "warnOnUnsupportedTypeScriptVersion": true
            },
            "plugins": [
                "@typescript-eslint"
            ],
            // If adding a typescript-eslint version of an existing ESLint rule,
            // make sure to disable the ESLint rule here.
            "rules": {
                // TypeScript's `noFallthroughCasesInSwitch` option is more robust (#6906)
                "default-case": "off",
                // 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/291)
                "no-dupe-class-members": "off",
                // 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/477)
                "no-undef": "off",
                // Add TypeScript specific rules (and turn off ESLint equivalents)
                "@typescript-eslint/consistent-type-assertions": "warn",
                "no-array-constructor": "off",
                "@typescript-eslint/no-array-constructor": "warn",
                "no-redeclare": "off",
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-redeclare": "warn",
                "no-use-before-define": "off",
                "@typescript-eslint/no-use-before-define": [
                    "warn",
                    {
                        "functions": false,
                        "classes": false,
                        "variables": false,
                        "typedefs": false
                    }
                ],
                "no-unused-expressions": "off",
                "@typescript-eslint/no-unused-expressions": [
                    "error",
                    {
                        "allowShortCircuit": true,
                        "allowTernary": true,
                        "allowTaggedTemplates": true
                    }
                ],
                "no-unused-vars": "off",
                "@typescript-eslint/no-unused-vars": [
                    "warn",
                    {
                        "args": "none",
                        "ignoreRestSiblings": true
                    }
                ],
                "no-useless-constructor": "off",
                "@typescript-eslint/no-useless-constructor": "warn",
                "import/no-unresolved": "off"
            }
        },
        {
            "files": [
                "scripts/**"
            ],
            "rules": {
                "no-console": "off"
            },
            "env": {
                "browser": false,
                "jest": false,
                "node": true
            }
        }
    ]
}